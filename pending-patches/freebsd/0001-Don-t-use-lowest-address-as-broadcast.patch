From de8f01c87339acddd1a42f9d4887af60d922edd4 Mon Sep 17 00:00:00 2001
From: Seth Schoen <schoen@loyalty.org>
Date: Wed, 9 Jun 2021 19:23:06 -0700
Subject: [PATCH] Don't use lowest address as broadcast

There are still other things to check, but this is a first cut
at making the lowest address no longer be treated as a broadcast.

It achieved interoperability on a LAN with an analogously-patched
Linux host (both could ARP/ping/netcat with each other when one
was using the .0 address on a /24).
---
 sys/netinet/in.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/sys/netinet/in.c b/sys/netinet/in.c
index bcf071a81e0e..255776a63ce9 100644
--- a/sys/netinet/in.c
+++ b/sys/netinet/in.c
@@ -1133,13 +1133,13 @@ int
 in_ifaddr_broadcast(struct in_addr in, struct in_ifaddr *ia)
 {
 
-	return ((in.s_addr == ia->ia_broadaddr.sin_addr.s_addr ||
+	return (in.s_addr == ia->ia_broadaddr.sin_addr.s_addr &&
 	     /*
-	      * Check for old-style (host 0) broadcast, but
-	      * taking into account that RFC 3021 obsoletes it.
+	      * Check for old-style (host 0) broadcast is removed
+	      * (not just for point-to-point links per RFC 3021, but
+	      * for everything, because we don't need two broadcast
+	      * addresses).
 	      */
-	    (ia->ia_subnetmask != IN_RFC3021_MASK &&
-	    ntohl(in.s_addr) == ia->ia_subnet)) &&
 	     /*
 	      * Check for an all one subnetmask. These
 	      * only exist when an interface gets a secondary
-- 
2.25.1

